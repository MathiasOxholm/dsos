// -------------------------------------
// SCSS variables
// -------------------------------------
$brand: 'hs';
$prefix: '--' + $brand;
$root: 'html:not(.no-js)';
$perspective: 2000px;
$inView: $brand + '-inview';

// -------------------------------------
// SCSS lists
// -------------------------------------
$easings: ease-in, ease-out, ease-in-out;

$sizes: (
  'sm': 0.5,
  'md': 0.75,
  'lg': 1.5,
  'xl': 2,
  '2xl': 3,
);

$speed: (
  'slow': 0.5,
  'fast': 0.75,
);

// -------------------------------------
// Mixins
// -------------------------------------
@mixin calcProperty($property, $axis, $ratio: $property, $operator: '+') {
  #{$prefix}-#{$property}-#{$axis}: calc(0px #{$operator} var(#{$prefix}-#{$property}-#{$axis}-amount) * var(#{$prefix}-#{$ratio}-ratio));
}

// -------------------------------------
// DSOS CSS default properties
// -------------------------------------
:root {
  // Transition properties
  #{$prefix}-delay: 0ms;
  #{$prefix}-easing: var(#{$prefix}-ease-in-out);
  #{$prefix}-duration: 800ms;

  // Transition easings
  #{$prefix}-ease-in: cubic-bezier(0.4, 0, 1, 1);
  #{$prefix}-ease-out: cubic-bezier(0, 0, 0.2, 1);
  #{$prefix}-ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);

  // Visibility properties
  #{$prefix}-opacity: 1;
  #{$prefix}-visibility: visible;

  // Base calculation properties
  #{$prefix}-distance-y: 3rem;
  #{$prefix}-distance-x: 2rem;
  #{$prefix}-scale-ratio: 0.2;

  // Transfrom properties
  #{$prefix}-translate-y: 0;
  #{$prefix}-translate-x: 0;
  #{$prefix}-scale: 1;
  #{$prefix}-rotate: 0deg;

  // Ratio properties
  #{$prefix}-ratio: 1;
  #{$prefix}-translate-ratio: 1;
  #{$prefix}-scale-ratio: 0.2;

  // Amount properties
  #{$prefix}-translate-x-amount: 2rem;
  #{$prefix}-translate-y-amount: 3rem;

  // Efects properties
  #{$prefix}-blur: 0;
}

// -------------------------------------
// Main DSOS data-attribute
// -------------------------------------
#{$root} {
  [data-#{$brand}] {
    will-change: transform;

    // Transition settings
    transition-duration: var(#{$prefix}-duration);
    transition-timing-function: var(#{$prefix}-easing);
    transition-delay: var(#{$prefix}-delay);
    //transition-property: transform, translate, scale, rotate, opacity, visibility;

    // Visibility properties
    opacity: var(#{$prefix}-opacity);
    visibility: var(#{$prefix}-visibility);

    // Transfrom properties
    translate: var(#{$prefix}-translate-x) var(#{$prefix}-translate-y);
    scale: var(#{$prefix}-scale);
    rotate: var(#{$prefix}-rotate);

    // Effects
    filter: blur(var(#{$prefix}-blur));

    &.#{$inView} {
      // Visibility properties
      #{$prefix}-opacity: 1 !important;
      #{$prefix}-visibility: visible !important;

      // Transfrom properties
      #{$prefix}-translate-y: 0 !important;
      #{$prefix}-translate-x: 0 !important;
      #{$prefix}-scale: 1 !important;
      #{$prefix}-rotate: 0deg !important;

      // Effects
      #{$prefix}-blur: 0 !important;
    }
  }
}

// -------------------------------------
// Animation easing variantions
// -------------------------------------
@each $ease in $easings {
  #{$root} [data-#{$brand}~='#{$ease}'] {
    #{$prefix}-easing: var(#{$prefix}-#{$ease});
  }
}

// -------------------------------------
// Animation size variations
// -------------------------------------
@each $size, $value in $sizes {
  #{$root} [data-#{$brand}~='#{$size}'] {
    #{$prefix}-translate-ratio: $value;
  }
}

// -------------------------------------
// Fade animation
// -------------------------------------
#{$root} {
  // General fade
  [data-#{$brand}~='fade'] {
    #{$prefix}-opacity: 0;
    #{$prefix}-visibility: hidden;
  }
}

// -------------------------------------
// Directional animations
// -------------------------------------
#{$root} {
  // Up
  [data-#{$brand}~='up'] {
    @include calcProperty('translate', 'y');
  }

  // Down
  [data-#{$brand}~='down'] {
    @include calcProperty('translate', 'y', 'translate', '-');
  }

  // Left
  [data-#{$brand}~='left'] {
    @include calcProperty('translate', 'x');
  }

  // Right
  [data-#{$brand}~='right'] {
    @include calcProperty('translate', 'x', 'translate', '-');
  }
}

// -------------------------------------
// Zoom animations
// -------------------------------------
#{$root} {
  // Zoom in
  [data-#{$brand}~='zoom-in'] {
    #{$prefix}-scale: calc(1 + var(#{$prefix}-scale-ratio));
  }

  // Zoom out
  [data-#{$brand}~='zoom-out'] {
    #{$prefix}-scale: calc(1 - var(#{$prefix}-scale-ratio));
  }
}

// -------------------------------------
// Flip animations
// -------------------------------------
#{$root} {
  // Flip up
  [data-#{$brand}*='flip'] {
    backface-visibility: hidden;

    &.#{$inView} {
      transform: perspective($perspective) rotateY(0deg) rotateX(0deg) !important;
    }
  }

  [data-#{$brand}~='flip-up'] {
    transform: perspective($perspective) rotateX(-100deg);
  }

  // Flip down
  [data-#{$brand}~='flip-down'] {
    transform: perspective($perspective) rotateX(100deg);
  }

  // Flip left
  [data-#{$brand}~='flip-left'] {
    transform: perspective($perspective) rotateY(-100deg);
  }

  // Flip right
  [data-#{$brand}~='flip-right'] {
    transform: perspective($perspective) rotateY(100deg);
  }
}

// -------------------------------------
// Blur animations
// -------------------------------------
[data-#{$brand}*='blur'] {
  #{$prefix}-blur: 5px;
}

[data-hs-test] {
  background-color: attr(data-hs-test);
}

// -------------------------------------
// Remove animations if prefers-reduced-motion
// -------------------------------------
@media (prefers-reduced-motion: reduce) {
  :root body [data-#{$brand}] {
    transition: none;
    opacity: 1;
    visibility: visible;
    transform: none;
    translate: none;
    rotate: none;
    scale: none;
    filter: none;
  }
}
