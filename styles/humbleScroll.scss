// -------------------------------------
// SCSS variables
// -------------------------------------
$brand: "hs";
$var: "--" + $brand;
$attr: "data-" + $brand;
$root: ":root:not(.no-js)";
$inView: $brand + "-inview";
$stay: $brand + "-once";
$perspective: 2000px;

// -------------------------------------
// SCSS lists
// -------------------------------------
$properties: (
  // Transition
  delay: 0ms,
  easing: var(#{$var}-ease-out),
  duration: 600ms,
  // Transition easings
  ease-in: cubic-bezier(0.4, 0, 1, 1),
  ease-out: cubic-bezier(0, 0, 0.2, 1),
  ease-in-out: cubic-bezier(0.4, 0, 0.2, 1),
  // Visibility
  opacity: 1,
  visibility: visible,
  // Transfrom
  translate-y: 0,
  translate-x: 0,
  scale: 1,
  rotate: 0deg,
  perspective: 0,
  rotate-x: 0deg,
  rotate-y: 0deg,
  // Ratio
  ratio: 1,
  translate-ratio: 1,
  scale-ratio: 0.2,
  duration-ratio: 1,
  // Amount
  translate-x-amount: 2rem,
  translate-y-amount: 3rem,
  // Efects
  blur: 0
);

$easings: ease-in, ease-out, ease-in-out;

$sizes: (
  "sm": 0.5,
  "md": 0.75,
  "lg": 1.5,
  "xl": 2,
  "2xl": 3,
);

$durations: (
  "extra-slow": 3,
  "slow": 1.5,
  "fast": 0.5,
  "extra-fast": 0.25,
);

// -------------------------------------
// Mixins
// -------------------------------------
@mixin calcProperty($property, $axis, $ratio: $property, $operator: "+") {
  #{$var}-#{$property}-#{$axis}: calc(
    0px #{$operator} var(#{$var}-#{$property}-#{$axis}-amount) * var(#{$var}-#{$ratio}-ratio)
  );
}

// -------------------------------------
// HumbleScroll CSS default properties
// -------------------------------------
:root {
  @each $prop, $value in $properties {
    #{$var}-#{$prop}: #{$value};
  }
}

// -------------------------------------
// Main HumbleScroll data-attribute
// -------------------------------------
#{$root} [#{$attr}] {
  > * {
    pointer-events: none;

    // Transition settings
    transition-duration: calc(var(#{$var}-duration) * var(#{$var}-duration-ratio));
    transition-timing-function: var(#{$var}-easing);
    transition-delay: var(#{$var}-delay);
    transition-property: transform, opacity, filter, visibility;

    // Visibility properties
    opacity: var(#{$var}-opacity);
    visibility: var(#{$var}-visibility);

    // Transfrom properties
    transform: translateX(var(#{$var}-translate-x)) translateY(var(#{$var}-translate-y)) scale(var(#{$var}-scale))
      rotate(var(#{$var}-rotate)) perspective(var(#{$var}-perspective)) rotateX(var(#{$var}-rotate-x))
      rotateY(var(#{$var}-rotate-y));

    // Effects
    filter: blur(var(#{$var}-blur));
  }

  &.#{$inView},
  &.#{$stay} {
    > * {
      pointer-events: auto;

      // Visibility properties
      #{$var}-opacity: 1;
      #{$var}-visibility: visible;

      // Transfrom properties
      #{$var}-translate-y: 0;
      #{$var}-translate-x: 0;
      #{$var}-scale: 1;
      #{$var}-rotate: 0deg;
      #{$var}-rotate-x: 0deg;
      #{$var}-rotate-y: 0deg;

      // Effects
      #{$var}-blur: 0;
    }
  }
}

// -------------------------------------
// Animation easing variantions
// -------------------------------------
@each $ease in $easings {
  #{$root} [#{$attr}*="#{$ease}"] {
    #{$var}-easing: var(#{$var}-#{$ease});
  }
}

// -------------------------------------
// Animation size variations
// -------------------------------------
@each $size, $value in $sizes {
  #{$root} [#{$attr}*="#{$size}"] {
    #{$var}-translate-ratio: $value;
  }
}

// -------------------------------------
// Animation speed variations
// -------------------------------------
@each $duration, $value in $durations {
  #{$root} [#{$attr}~="#{$duration}"] {
    #{$var}-duration-ratio: $value;
  }
}

// -------------------------------------
// Fade animation
// -------------------------------------
#{$root} {
  // General fade
  [#{$attr}*="fade"],
  [#{$attr}*="zoom"] {
    #{$var}-opacity: 0;
    #{$var}-visibility: hidden;
  }
}

// -------------------------------------
// Directional animations
// -------------------------------------
#{$root} {
  // Up
  [#{$attr}*="up"] > * {
    @include calcProperty("translate", "y");
  }

  // Down
  [#{$attr}*="down"] > * {
    @include calcProperty("translate", "y", "translate", "-");
  }

  // Left
  [#{$attr}*="left"] > * {
    @include calcProperty("translate", "x");
  }

  // Right
  [#{$attr}*="right"] > * {
    @include calcProperty("translate", "x", "translate", "-");
  }
}

// -------------------------------------
// Zoom animations
// -------------------------------------
#{$root} {
  // Zoom in
  [#{$attr}*="zoom-in"] > * {
    #{$var}-scale: calc(1 + var(#{$var}-scale-ratio));
  }

  // Zoom out
  [#{$attr}*="zoom-out"] > * {
    #{$var}-scale: calc(1 - var(#{$var}-scale-ratio));
  }
}

// -------------------------------------
// Flip animations
// -------------------------------------
#{$root} {
  // General flip
  [#{$attr}*="flip"] {
    > * {
      #{$var}-perspective: $perspective;
      backface-visibility: hidden;
    }
  }

  // Flip up
  [#{$attr}*="flip-up"] > * {
    #{$var}-rotate-x: -100deg;
  }

  // Flip down
  [#{$attr}*="flip-down"] > * {
    #{$var}-rotate-x: 100deg;
  }

  // Flip left
  [#{$attr}*="flip-left"] > * {
    #{$var}-rotate-y: -100deg;
  }

  // Flip right
  [#{$attr}*="flip-right"] > * {
    #{$var}-rotate-y: 100deg;
  }
}

// -------------------------------------
// Blur animations
// -------------------------------------
#{$root} [#{$attr}*="blur"] {
  #{$var}-blur: 5px;
}

// -------------------------------------
// Remove animations if prefers-reduced-motion
// -------------------------------------
@media (prefers-reduced-motion: reduce) {
  :root body [#{$attr}] > * {
    transition: none;
    opacity: 1;
    visibility: visible;
    transform: none;
    filter: none;
  }
}
